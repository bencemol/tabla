html[data-is-dragging="true"] .stop-panning {
  overflow: hidden !important;
}

.over-top:first-child *,
.over-bottom:first-child *,
.over-left:first-child *,
.over-right:first-child * {
  pointer-events: none;
}

.over-top::before,
.over-bottom::after {
  content: "";
  position: absolute;
  width: 100%;
  height: var(--drag-over-offset-y);
  left: 0;
}

:not(.dragging) + .over-top::before,
.over-top:first-child::before {
  top: calc(-1 * var(--drag-over-offset-y));
}

.over-bottom::after {
  bottom: calc(-1 * var(--drag-over-offset-y));
}

.over-top:first-child,
.over-top:first-child ~ *,
:not(.dragging) + .over-top,
:not(.dragging) + .over-top ~ *,
.over-bottom:not(:last-of-type) ~ * {
  transform: translateY(var(--drag-over-offset-y));
}

.over-bottom + .dragging,
.over-bottom + .dragging ~ * {
  transform: translateY(0);
}

.over-left::before,
.over-right::after {
  content: "";
  position: absolute;
  height: 100%;
  width: var(--drag-over-offset-x);
  top: 0;
}

:not(.dragging) + .over-left::before,
.over-left:first-child::before {
  left: calc(-1 * var(--drag-over-offset-x));
}

.over-right::after {
  right: calc(-1 * var(--drag-over-offset-x));
}

.over-left:first-child,
.over-left:first-child ~ *,
:not(.dragging) + .over-left,
:not(.dragging) + .over-left ~ *,
.over-right:not(:last-of-type) ~ * {
  transform: translateX(var(--drag-over-offset-x));
}

.over-right + .dragging,
.over-right + .dragging ~ * {
  transform: translateX(0);
}
